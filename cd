
resource "aws_cloudfront_distribution" "this" {
  aliases             = var.aliases
  enabled             = true
  is_ipv6_enabled     = var.cloudfront_ipv6_enable
  default_root_object = var.default_root_object

  origin {
    domain_name = var.s3_website_endpoint
    origin_id   = var.bucket_regional_domain_name

    custom_origin_config {
      http_port                = 80
      https_port               = 443
      origin_keepalive_timeout = 5
      origin_protocol_policy   = "http-only"
      origin_read_timeout      = 30
      origin_ssl_protocols = [
        "TLSv1.2"
      ]
    }
  }

  viewer_certificate {
    cloudfront_default_certificate = false
    acm_certificate_arn            = var.acm_arn
    ssl_support_method             = "sni-only"
    minimum_protocol_version       = "TLSv1.2_2021"
  }

  restrictions {
    geo_restriction {
      restriction_type = "none"
      locations        = []
    }
  }

  default_cache_behavior {
    cache_policy_id        = "658327ea-f89d-4fab-a63d-7e88639e58f6"
    viewer_protocol_policy = "redirect-to-https"
    compress               = true
    allowed_methods        = ["GET", "HEAD"]
    cached_methods         = ["GET", "HEAD"]
    target_origin_id       = var.bucket_regional_domain_name
  }
  tags = var.tags
}

output "cdn_id" {
  value = aws_cloudfront_distribution.this.id
}

output "cdn_arn" {
  value = aws_cloudfront_distribution.this.arn
}

output "domain_name" {
  value = aws_cloudfront_distribution.this.domain_name
}

output "hosted_zone_id" {
  value = aws_cloudfront_distribution.this.hosted_zone_id
}

variable "aliases" {
  type        = list(string)
  description = "List of alternative domain names for CDN"
  default     = null
}

variable "cloudfront_ipv6_enable" {
  type        = bool
  description = "Whether to enable ipv6 for CDN"
  default     = false
}

variable "s3_website_endpoint" {
  type        = string
  description = "s3 westite endpoint"
  default     = null
}

variable "bucket_regional_domain_name" {
  type        = string
  description = "S3 bucket regional domain name"
  default     = null
}

variable "default_root_object" {
  type        = string
  description = "Object that you want CloudFront to return (for example, index.html) when an end user requests the root URL."
  default     = null
}

variable "acm_arn" {
  type        = string
  description = "ARN of the AWS Certificate Manager certificate that you wish to use with this distribution."
  default     = null
}

variable "tags" {
  type        = map(string)
  description = "Tags for your infrastructure"
  default     = {}
}

terraform {
  required_version = ">= 1.5.0"

  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = ">= 5.52.0"
    }
  }
}
